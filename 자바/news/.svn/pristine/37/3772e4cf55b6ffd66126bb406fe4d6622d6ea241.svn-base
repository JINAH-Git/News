//정제한 데이터 정보를 모델(Model)로 부터 처리하기 위한 DTO클래스(Data Transfer Object)
package news.dto;

import news.vo.*;
import news.dao.*;
import java.util.ArrayList;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;

public class RefinedataDTO extends DBManager
{
	//현재날짜 얻기
	public String GetNow()
	{
		LocalDate now = LocalDate.now();
		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy년 MM월 dd일  (E)");
		String timenow = now.format(formatter);
		return timenow;
	}
	
	//현재시간 얻기
	public String GetTime()
	{
		LocalTime now = LocalTime.now(); 
		int hour = now.getHour();
		
		String printhour = "";
		if( hour <= 9 )
		{
			printhour = "00:00 ~ 09:00";
		}else if( hour <= 13 )
		{
			printhour = "00:00 ~ 13:00";
		}else
		{
			printhour = "00:00 ~ 17:00";
		}
		
		return printhour;
	}
	
	//오늘의 뉴스 현황 그래프 내용가져오기
	public ArrayList<RefinedataVO> GetTotalNews(String time)
	{
		String gettime = time.substring(0, 14);
		gettime = gettime.replace(" ", "").replace("년", "-").replace("월", "-").replace("일", "%");
		
		ArrayList<RefinedataVO> list = new ArrayList<RefinedataVO>();
		RefinedataVO vo = null;
		
		int[] count = new int[6];
		
		this.DBOpen();
		String sql = "";
		sql  = "select rdtopcat, count(*) as count from refinedata ";
		sql += "where rdrefine = '2' and rddate like '" + gettime + "' ";
		sql += "group by rdtopcat ";
		System.out.println(sql);
		
		this.RunSelect(sql);
		while(this.Next() == true)
		{
			vo = new RefinedataVO();
			vo.setRdtopcat(this.getValue("rdtopcat"));
			vo.setRdtopcat(this.getValue("count"));
			list.add(vo);
		}
		this.DBClose();
		
		return list;
	}
	
	//기사 내용 하나 가져오기
	public RefinedataVO GetPopUp(int cdno, String rdtopcat,String rdbtmcat)
	{
		RefinedataVO vo = null;
		
		this.DBOpen();
		String sql = "";
		sql  = "select * from refinedata ";
		sql += "where rdrefine = '2' and "; 
		sql += "cdno = " + cdno + " ";
		sql += "rdtopcat = '" + rdtopcat + "' and ";
		sql += "rdbtmcat = '" + rdbtmcat + "' ";
		System.out.println(sql);
		this.RunSelect(sql);
		
		if(this.Next() == true)
		{
			vo = new RefinedataVO();
			vo.setCdno(Integer.parseInt(this.getValue("cdno")));
			vo.setRdurl(this.getValue("cdurl"));
			vo.setRdtopcat(this.getValue("cdtopcat"));
			vo.setRdbtmcat(this.getValue("cdbtmcat"));
			vo.setRdmedia(this.getValue("cdmedia"));
			vo.setRdtitle(this.getValue("cdtitle"));
			vo.setRddate(this.getValue("cddate"));
			vo.setRdwriter(this.getValue("cdwriter"));
			vo.setRdnote(this.getValue("cdnote"));
		}
		this.DBClose();
		return vo;
	}
	
	
	//모달팝업 리스트 가져오기, 페이징하는 로직을 삽입해줘야함
	public ArrayList<RefinedataVO> GetNewsList(String rdtopcat,String rdbtmcat)
	{
		ArrayList<RefinedataVO> list = new ArrayList<RefinedataVO>();
		RefinedataVO vo = null;
		
		this.DBOpen();
		String sql = "";
		sql  = "select cdno,rdurl,rdmedia,rdtitle,rddate,rdwriter,rdnote,rdimg from refinedata where rdrefine = '2' ";
		sql += "and rdtopcat = '" + rdtopcat + "' and rdbtmcat = '" + rdbtmcat + "' ";
		sql += "order by rddate desc ";
		sql += "limit 0,5 ";
		System.out.println(sql);
		this.RunSelect(sql);
		while(this.Next() == true)
		{
			vo = new RefinedataVO();
			vo.setCdno(Integer.parseInt(this.getValue("cdno")));
			vo.setRdurl(this.getValue("rdurl"));
			vo.setRdmedia(this.getValue("rdmedia"));
			vo.setRdtitle(this.getValue("rdtitle"));
			vo.setRddate(this.getValue("rddate"));
			vo.setRdwriter(this.getValue("rdwriter"));
			vo.setRdnote(this.getValue("rdnote"));
			vo.setRdimg(this.getValue("rdimg"));
			list.add(vo);
		}
		this.DBClose();
		
		return list;
	}
	
	//전체 기사 개수를 얻는다
	public int GetTotal(String rdtopcat,String rdbtmcat)
	{
		int total = 0;
		this.DBOpen();
		
		String sql  = "";
		sql  = "select count(*) from refinedata where rdrefine = '2' ";
		sql += "where rdtopcat = '" + rdtopcat + "' and rdbtmcat = '" + rdbtmcat + "' ";
		System.out.println(sql);
		this.RunSelect(sql);
		
		if(this.Next() == true)
		{
			total = Integer.parseInt(this.getValue("count"));
		}
		this.DBClose();
		
		return total;
	}
	//오늘 기사 개수 가져오기
	public int GetTodayTotal(String time)
	{
		String gettime = time.substring(0, 14);
		gettime = gettime.replace(" ", "").replace("년", "-").replace("월", "-").replace("일", "%");
		
		int total = 0;
		this.DBOpen();
		
		String sql  = "";
		sql  = "select count(*) as count from refinedata ";
		sql += "where rdrefine = '2' and rddate like '" + gettime + "' ";
		System.out.println(sql);
		this.RunSelect(sql);
		
		if(this.Next() == true)
		{
			total = Integer.parseInt(this.getValue("count"));
		}
		this.DBClose();
		
		return total;
	}
		
}
